"-----------------------------------------------------------------------------
" Bring in neovim defaults
"-----------------------------------------------------------------------------

if !has('nvim')
  set autoindent
  set autoread
  set backspace=indent,eol,start
  set backupdir=.,~/.vim/backup
  set complete-=i
  set directory=~/.vim/swap//
  set display=lastline
  set formatoptions=tcqj
  set history=10000
  set hlsearch
  set incsearch
  set langnoremap
  set laststatus=2
  set listchars=tab:>\ ,trail:-,nbsp:+
  set mouse=a
  set nocompatible
  set nrformats=bin,hex
  set sessionoptions-=options
  set smarttab
  set tabpagemax=50
  set tags=./tags;,tags
  set ttyfast
  set undodir=~/.vim/undo
  set viminfo+=!
  set wildmenu
endif

"-----------------------------------------------------------------------------
" Plugins
"-----------------------------------------------------------------------------

if has('nvim')
  let s:plugin_dir = $HOME . '/.config/share/nvim/plugged'
else
  let s:plugin_dir = $HOME . '/.vim/plugged'
endif

" https://github.com/junegunn/vim-plug
call plug#begin(s:plugin_dir)

" Colorschemes
Plug 'tomasr/molokai'
Plug 'w0ng/vim-hybrid'

" Editing support
Plug 'vim-scripts/vim-auto-save'
Plug 'easymotion/vim-easymotion'
Plug 'matze/vim-move'
Plug 'terryma/vim-multiple-cursors'

" Search and completion
Plug 'Raimondi/delimitMate'
Plug 'wellle/tmux-complete.vim'
Plug 'haya14busa/incsearch.vim'
Plug 'haya14busa/incsearch-fuzzy.vim'

" Snippet
Plug 'SirVer/ultisnips'
Plug 'honza/vim-snippets'

" VCS
Plug 'airblade/vim-gitgutter'

" IDE
Plug 'majutsushi/tagbar'
Plug 'critiqjo/lldb.nvim'
Plug 'Valloric/YouCompleteMe',
  \ {
  \   'do': 'python2.7 install.py --clang-completer'
  \ }

" Syntax files
Plug 'rust-lang/rust.vim'
Plug 'petRUShka/vim-opencl'
Plug 'tikhomirov/vim-glsl'
Plug 'zah/nim.vim'
Plug 'cespare/vim-toml'

call plug#end()

" Autoinstall missing plugins
autocmd VimEnter *
  \  if len(filter(values(g:plugs), '!isdirectory(v:val.dir)'))
  \|   PlugInstall --sync | q
  \| endif

"-----------------------------------------------------------------------------
" Read/Write behaviour
"-----------------------------------------------------------------------------

set cpoptions+=W
set hidden

" vim-auto-save
let g:auto_save = 1

"-----------------------------------------------------------------------------
" User interface
"-----------------------------------------------------------------------------

set visualbell
set timeoutlen=60
set cmdheight=2
set statusline=
set statusline+=<%n>        " buffer number
set statusline+=\ %<%f      " filepath
set statusline+=\ %h%w%m%r  " [HELP][Preview][+][RO]
set statusline+=%=          " right align
set statusline+=%c,         " cursor column
set statusline+=%l/%L       " cursor line
set statusline+=\ %P        " percent position

"-----------------------------------------------------------------------------
" Normal mode
"-----------------------------------------------------------------------------

nmap <Up>      :bp<CR>
nmap <Down>    :bn<CR>
nmap <Left>    <C-O>
nmap <Right>   <C-I>
nmap <C-Left>  :pop<CR>
nmap <C-Right> :tag<CR>
nmap <C-j>     <C-d>
nmap <C-k>     <C-u>

" tagbar
nmap <F8> :TagbarToggle<CR>

" vim-easymotion
let g:EasyMotion_do_mapping = 0
let g:EasyMotion_smartcase = 1

nmap ,         <Plug>(easymotion-overwin-f2)
map  <Leader>j <Plug>(easymotion-j)
map  <Leader>k <Plug>(easymotion-k)

" vim-move
let g:move_key_modifier = 'M'

"-----------------------------------------------------------------------------
" Insert mode
"-----------------------------------------------------------------------------

set showmatch " Briefly jump to the matching paren

set tabstop=8
set softtabstop=4
set shiftwidth=4
set expandtab
set smartindent

au FileType vim        setlocal shiftwidth=2
au FileType css        setlocal shiftwidth=2
au FileType javascript setlocal shiftwidth=2 cindent
au FileType html       setlocal shiftwidth=2
au FileType scheme     setlocal shiftwidth=2
au FileType c          setlocal cindent
au FileType cpp        setlocal cindent
au FileType rust       setlocal cindent

set cinoptions+=L0.5s       " half-indent jump labels
set cinoptions+=:0.5s,=0.5s " half-indent case labels
set cinoptions+=g0.5s,h0.5s " half-indent member access specifiers

"-----------------------------------------------------------------------------
" Command mode
"-----------------------------------------------------------------------------

set wildmode=full
set wildignore=

"-----------------------------------------------------------------------------
" Visual cue
"-----------------------------------------------------------------------------

set number
set cursorline
set list
set listchars=tab:^\ ,trail:-,extends:>,precedes:<,nbsp:%
set showbreak="+++ "
set colorcolumn=80,100

" Override molokai palette
au ColorScheme molokai hi Normal           ctermbg=none
au ColorScheme molokai hi cStorageClass    ctermfg=170
au ColorScheme molokai hi cStructure       ctermfg=75
au ColorScheme molokai hi cType            ctermfg=161
au ColorScheme molokai hi cppAuto          ctermfg=136
au ColorScheme molokai hi cppConst         ctermfg=136
au ColorScheme molokai hi cppConstexpr     ctermfg=136
au ColorScheme molokai hi cppStandoutDelim ctermfg=82
au ColorScheme molokai hi cppUnimportant   ctermfg=60
au ColorScheme molokai hi cppNamespaceStd  ctermfg=241
colorscheme molokai

"-----------------------------------------------------------------------------
" Completion
"-----------------------------------------------------------------------------

" YouCompleteMe
let g:ycm_autoclose_preview_window_after_completion = 1
let g:ycm_autoclose_preview_window_after_insertion = 1
let g:ycm_key_list_select_completion = ['<TAB>', '<Down>', '<Enter>']
let g:ycm_extra_conf_vim_data = ['&filetype']

" tmux-complete.vim
let g:tmuxcomplete#trigger = 'omnifunc'

"-----------------------------------------------------------------------------
" Search
"-----------------------------------------------------------------------------

set ignorecase
set smartcase

" incsearch.vim
map /  <Plug>(incsearch-forward)
map ?  <Plug>(incsearch-backward)
map g/ <Plug>(incsearch-stay)

let g:incsearch#auto_nohlsearch = 1
map n  <Plug>(incsearch-nohl-n)
map N  <Plug>(incsearch-nohl-N)
map *  <Plug>(incsearch-nohl-*)
map #  <Plug>(incsearch-nohl-#)
map g* <Plug>(incsearch-nohl-g*)
map g# <Plug>(incsearch-nohl-g#)

" insearch-fuzzy.vim
map z/  <Plug>(incsearch-fuzzy-/)
map z?  <Plug>(incsearch-fuzzy-?)
map zg/ <Plug>(incsearch-fuzzy-g/)
